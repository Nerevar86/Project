#Область ОписаниеПеременных

&НаКлиенте
Перем КешированныеЗначения;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.АвторизованныйПользователь();
	
	ЗагрузитьЗначения();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	КешированныеЗначения = Новый Массив;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СохранитьЗначения();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбъекты

&НаКлиенте
Процедура ОбъектыПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Объекты.ТекущиеДанные;
	
	Если ТекущиеДанные.Пометка Тогда
		КешированныеЗначения.Добавить(ТекущиеДанные.Объект);
	Иначе
		
		ИндексПоиска = КешированныеЗначения.Найти(ТекущиеДанные.Объект);
		Если ИндексПоиска <> Неопределено Тогда
			КешированныеЗначения.Удалить(ИндексПоиска);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = Элементы.Объекты.ПодчиненныеЭлементы.ОбъектыОбъект.Имя Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, Элементы.Объекты.ТекущиеДанные.Объект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьОбъекты(Команда)
	ЗаполнитьОбъектыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьГруппы(Команда)
	
	Если ТипЗнч(КешированныеЗначения) = Тип("Массив")
		И КешированныеЗначения.Количество() Тогда
		ТекстВопроса = Нстр("ru = 'После очистки групп документа операция необратима. Продолжить?'");
		Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопрос", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	УстановитьПометкиНаСервере(КешированныеЗначения);	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	КешированныеЗначения.Очистить();
	СнятьПометкиНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеОтветаНаВопрос(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Оповещение = Новый ОписаниеОповещения("ОчиститьГруппыЗавершение", ЭтотОбъект);
		ОткрытьФорму("Справочник.Пользователи.ФормаВыбора",,,,,, Оповещение);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОбъектыНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РабочиеГруппы.Объект КАК Объект
		|ИЗ
		|	РегистрСведений.РабочиеГруппы КАК РабочиеГруппы
		|ГДЕ
		|	ВЫРАЗИТЬ(РабочиеГруппы.Объект КАК Справочник.ВнутренниеДокументы).ДатаСоздания МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И РабочиеГруппы.Объект ССЫЛКА Справочник.ВнутренниеДокументы
		|	И &УсловиеПоВидуДокумента
		|	И &УсловиеУчастник
		|
		|СГРУППИРОВАТЬ ПО
		|	РабочиеГруппы.Объект
		|
		|ИМЕЮЩИЕ
		|	СУММА(1) > &КоличествоВГруппе
		|
		|УПОРЯДОЧИТЬ ПО
		|	Объект";
	
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("КоличествоВГруппе", КоличествоВГруппе);
	
	Если ЗначениеЗаполнено(ВидДокумента) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоВидуДокумента",
			"ВЫРАЗИТЬ(РабочиеГруппы.Объект КАК Справочник.ВнутренниеДокументы).ВидДокумента = &ВидДокумента");
		Запрос.УстановитьПараметр("ВидДокумента", ВидДокумента);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоВидуДокумента", "Истина");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Участник) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеУчастник",
		"РабочиеГруппы.Участник = &Участник");
		Запрос.УстановитьПараметр("Участник", Участник);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеУчастник", "Истина");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
		
	ОбъектыТЗ = РезультатЗапроса.Выгрузить();
	Объекты.Загрузить(ОбъектыТЗ);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТипыУчастника()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТИПЗНАЧЕНИЯ(РабочиеГруппы.Участник) КАК Тип
	|ИЗ
	|	РегистрСведений.РабочиеГруппы КАК РабочиеГруппы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТИПЗНАЧЕНИЯ(РабочиеГруппы.Участник)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Новый ОписаниеТипов("СправочникСсылка.РолиИсполнителей"));
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Тип) Тогда
			МассивТипов.Добавить(Выборка.Тип);
		КонецЕсли;
	КонецЦикла;
	
	ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
	
	Элементы.Участник.ОграничениеТипа = ОписаниеТипов;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьЗначения()
	
	Настройки = Настройки(Элементы, ЭтотОбъект);
	
	Ключ = Ключ();
	
	ИмяПользователя = ИмяТекущегоПользователя(ТекущийПользователь);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(Ключ,, Настройки,, ИмяПользователя);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьЗначения()
		
	Ключ = Ключ();
	
	ИмяПользователя = ИмяТекущегоПользователя(ТекущийПользователь);
	
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(Ключ,,,, ИмяПользователя);
	Если ТипЗнч(Настройки) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Настройки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция Ключ()
	Возврат РеквизитФормыВЗначение("Объект").Метаданные().Имя;
КонецФункции

&НаСервереБезКонтекста
Функция ИмяТекущегоПользователя(Знач Пользователь)
	
	ИмяПользователя = "";
	Если ЗначениеЗаполнено(Пользователь) Тогда
		ИмяПользователя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователь, "Наименование");
	КонецЕсли;
	
	Возврат ИмяПользователя;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Настройки(Знач Элементы, Знач Форма)
	
	Настройки = Новый Структура;
	Настройки.Вставить(Элементы.Период.Имя, Форма.Период);
	Настройки.Вставить(Элементы.КоличествоВГруппе.Имя, Форма.КоличествоВГруппе);
	Настройки.Вставить(Элементы.ВидДокумента.Имя, Форма.ВидДокумента);
	
	Возврат Настройки;
	
КонецФункции

&НаСервере
Процедура ОчиститьГруппыНаСервере(Пользователь, КешированныеЗначения)
	//Возврат;
	Для Каждого Значение Из КешированныеЗначения Цикл
		
		НаборЗаписей = РегистрыСведений.РабочиеГруппы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Значение);
		//НаборЗаписей.Прочитать();
		НаборЗаписей.Записать();
		
		Запись = НаборЗаписей.Добавить();
		Запись.Объект = Значение;
		Запись.Участник = Пользователь;
		Запись.ОтметкиВремениИдентификаторНабораЗаписей = Новый УникальныйИдентификатор;
		Запись.Изменение = Истина;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
 
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьГруппыЗавершение(Результат, ДополнительныПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("СправочникСсылка.Пользователи") Тогда
		ОчиститьГруппыНаСервере(Результат, КешированныеЗначения);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьПометкиНаСервере(КешированныеЗначения)
	
	ОбъектыТЗ = Объекты.Выгрузить();
	ОбъектыТЗ.ЗаполнитьЗначения(Истина, "Пометка");
	Объекты.Загрузить(ОбъектыТЗ);
	
	КешированныеЗначения = ОбъектыТЗ.ВыгрузитьКолонку("Объект");
	
КонецПроцедуры

&НаСервере
Процедура СнятьПометкиНаСервере()
	
	ОбъектыТЗ = Объекты.Выгрузить();
	ОбъектыТЗ.ЗаполнитьЗначения(Ложь, "Пометка");
	Объекты.Загрузить(ОбъектыТЗ);
	
КонецПроцедуры

#КонецОбласти 
 



















