
#Область ОписаниеПеременных

&НаКлиенте
Перем РазрешитьЗакрытие;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Не Параметры.Свойство("КонтрагентыITOkna");
	
	Если Не Отказ Тогда
		Для Каждого ПараметрКонтрагентITOkna Из Параметры.КонтрагентыITOkna Цикл
			
			НоваяСтрока = СписокЗаказов.Добавить();
			НоваяСтрока.КонтрагентITOkna = ПараметрКонтрагентITOkna["Клиент"];
			НоваяСтрока.Ключ = ПараметрКонтрагентITOkna["Ключ"];
			НоваяСтрока.Дата = ПараметрКонтрагентITOkna["Дата"];
			НоваяСтрока.Номер = ПараметрКонтрагентITOkna["Номер"];
			НоваяСтрока.ЗаказПредставление = СтрШаблон("Заказ № %1 от %2",
				Формат(НоваяСтрока.Номер, "ЧГ=0"), Формат(НоваяСтрока.Дата, "ДФ=dd.MM.yyyy"));
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("КонтрагентITOkna", НоваяСтрока.КонтрагентITOkna);
			
			НайденныеСтроки = Список.НайтиСтроки(ПараметрыОтбора);
			Если Не НайденныеСтроки.Количество() Тогда
				НоваяСтрока1 = Список.Добавить();
				НоваяСтрока1.КонтрагентITOkna = ПараметрКонтрагентITOkna["Клиент"];
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗавершениеРаботы Тогда
		Если Не РазрешитьЗакрытие Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ОбработчикСписокПриАктивизацииСтроки()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ОтборСтрок = Новый ФиксированнаяСтруктура("КонтрагентITOkna", ТекущиеДанные.КонтрагентITOkna);
		
		Элементы.СписокЗаказов.ОтборСтрок = ОтборСтрок;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодтвердитьИЗакрыть(Команда)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Клиент1С", ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка"));
	
	НайденныеСтроки = Список.НайтиСтроки(ПараметрыОтбора);
	Для Каждого Строка Из НайденныеСтроки Цикл
		Индекс = Список.Индекс(Строка);
		Поле = СтрШаблон("Список[%1].Клиент1С", Индекс);
		ОбщегоНазначенияКлиент.СообщитьПользователю(
		СтрШаблон(Нстр("ru = 'Не заполнено соответствие для: %1'"),
			Строка.КонтрагентITOkna),, Поле,, Отказ);
	КонецЦикла;
	
	Если Не Отказ Тогда
		
		ЗаписатьСоответствие(Отказ);
		
		Если Не Отказ Тогда
			ТекстВопроса = Нстр("ru = 'Запись соответствий прошла успешно. Запустить импорт выбранных заказов повторно?'");
			Обработчик = Новый ОписаниеОповещения("ПодтвердитьИЗакрытьЗавершение", ЭтотОбъект);
			ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	РазрешитьЗакрытие = Истина;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаписатьСоответствие(Отказ)
	
	Для Каждого Строка Из Список Цикл
		
		МенеджерЗаписи = РегистрыСведений.IT_Okna_СоответствиеКонтрагентов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.КонтрагентITOkna = Строка.КонтрагентITOkna;
		МенеджерЗаписи.Партнер1С = Строка.Клиент1С;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Отказ = Истина;
			Возврат;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОповещений

&НаКлиенте
Процедура ПодтвердитьИЗакрытьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РазрешитьЗакрытие = Истина;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СоответствиеКонтрагентов = Новый Соответствие;
		Для Каждого Строка Из Список Цикл
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("КонтрагентITOkna", Строка.КонтрагентITOkna);
			
			НайденныеСтроки = СписокЗаказов.НайтиСтроки(ПараметрыОтбора);
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				СоответствиеКонтрагентов.Вставить(НайденнаяСтрока.Ключ, Строка.Клиент1С);
			КонецЦикла;
			
		КонецЦикла;
		Закрыть(СоответствиеКонтрагентов);
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбработчикСписокПриАктивизацииСтроки", 0.1, Истина);
КонецПроцедуры

#КонецОбласти

РазрешитьЗакрытие = Ложь;