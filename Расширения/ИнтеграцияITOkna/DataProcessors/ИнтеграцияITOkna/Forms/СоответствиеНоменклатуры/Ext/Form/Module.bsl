
#Область ОписаниеПеременных

&НаКлиенте
Перем РазрешитьЗакрытие;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = Не Параметры.Свойство("НоменклатураБезСоответствий");
	Если Не Отказ Тогда
		Ключ = 1;
		Для Каждого Строка Из Параметры.НоменклатураБезСоответствий Цикл
			
			НоваяСтрока = СписокЗаказов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			НоваяСтрока.ЗаказПредставление = Строка.Заказ;
			НоваяСтрока.Ключ = Ключ;
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Артикул", НоваяСтрока.Артикул);
			ПараметрыОтбора.Вставить("Наименование", НоваяСтрока.Наименование);
			
			НайденныеСтроки = Список.НайтиСтроки(ПараметрыОтбора);
			Если Не НайденныеСтроки.Количество() Тогда
				НоваяСтрока1 = Список.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока1, Строка);
				НоваяСтрока1.Ключ = Ключ;
				Ключ = Ключ + 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗавершениеРаботы Тогда
		Если Не РазрешитьЗакрытие Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.СписокНоменклатура Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Если ТекущиеДанные.НеЗагружать Тогда
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

 &НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	РазрешитьЗакрытие = Истина;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьИЗакрыть(Команда)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Номенклатура", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	ПараметрыОтбора.Вставить("НеЗагружать", Ложь);
	
	НайденныеСтроки = Список.НайтиСтроки(ПараметрыОтбора);
	Для Каждого Строка Из НайденныеСтроки Цикл
		
		ТекстОшибки = СтрШаблон(Нстр("ru = 'Не заполнено соответствие для: %1. Запись невозможна'"),
			Строка.Наименование);
			
		Индекс = Список.Индекс(Строка);
		
		Поле = СтрШаблон("Список[%1].Номенклатура", Индекс);
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки,, Поле,, Отказ);
		
	КонецЦикла;
	
	Если Не Отказ Тогда
		
		ЗаписатьСоответствие();
		
		РазрешитьЗакрытие = Истина;
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаписатьСоответствие()
	
	Для Каждого Строка Из Список Цикл
		
		МенеджерЗаписи = РегистрыСведений.IT_Okna_СоответствиеНоменклатуры.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.НаименованиеITOkna = Строка.Наименование;
		МенеджерЗаписи.АртикулITOkna = Строка.Артикул;
		МенеджерЗаписи.Номенклатура1С = Строка.Номенклатура;
		МенеджерЗаписи.НеЗагружать = Строка.НеЗагружать;
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			ВызватьИсключение(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбработчикСписокПриАктивизацииСтроки", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСписокПриАктивизацииСтроки()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ОтборСтрок = Новый ФиксированнаяСтруктура("Ключ", ТекущиеДанные.Ключ);
		
		Элементы.СписокЗаказов.ОтборСтрок = ОтборСтрок;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

РазрешитьЗакрытие = Ложь;