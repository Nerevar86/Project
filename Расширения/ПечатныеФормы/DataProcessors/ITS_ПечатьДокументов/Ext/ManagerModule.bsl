#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетОферта") Тогда
		СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СчетОферта",
			НСтр("ru='Счет - оферта'"),
			СформироватьПечатнуюФорму(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, "СчетОферта"));
			
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПисьмоНаОтгрузку") Тогда
		СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);	
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПисьмоНаОтгрузку",
			НСтр("ru='Письмо на отгрузку'"),
			СформироватьПечатнуюФорму(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, "Приложение"));
			
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение") Тогда
		СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);	
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"Приложение",
			НСтр("ru='Приложение'"),
			СформироватьПечатнуюФорму(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, "Приложение"));
			
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РаспоряжениеНаПогрузкуМеталлСклад") Тогда
		СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);	
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РаспоряжениеНаПогрузкуМеталлСклад",
			НСтр("ru='Расп. на погр. МЕТАЛЛ-СКЛАД'"),
			СформироватьПечатнуюФорму(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, "РаспоряжениеНаПогрузкуМеталлСклад"));
			
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТранспортнаяНакладная") Тогда
		СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ТранспортнаяНакладная", НСтр("ru = 'Транспортная накладная'"),
			СформироватьПечатнуюФорму(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, "ТранспортнаяНакладная"));
			
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ТТН",
			НСтр("ru = 'Товарно-транспортная накладная'"),
			СформироватьПечатнуюФорму(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, "ТТН"));

	КонецЕсли;
		
КонецПроцедуры

Функция ПараметрыПечатиДокумента(Знач Документ)
	
	Результат = Новый Структура;
	
	Результат.Вставить("ДанныеДляПечати", "");
	Результат.Вставить("ЗаполнитьТабличныйДокумент", "");
	Результат.Вставить("ТабличныйДокумент", Новый ТабличныйДокумент);
	
	Если Документ = "СчетОферта" Тогда
		Результат.ДанныеДляПечати = "ДанныеДляПечатнойФормыСчетаОферты(СтруктураОбъектов.Значение, ПараметрыПечати)";
		Результат.ЗаполнитьТабличныйДокумент =
			"ЗаполнитьТабличныйДокументСчетаОферты(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати);";
		
		Результат.ТабличныйДокумент.АвтоМасштаб = Истина;
		Результат.ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СЧЕТ_ОФЕРТА";
		
	ИначеЕсли Документ = "ПисьмоНаОтгрузку" Тогда
		Результат.ДанныеДляПечати = "ДанныеДляПечатнойФормыПисьмоНаОтгрузку(СтруктураОбъектов.Значение, ПараметрыПечати)";
		Результат.ЗаполнитьТабличныйДокумент =
			"ЗаполнитьТабличныйДокументПисьмоНаОтгрузку(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати);";
		
		Результат.ТабличныйДокумент.АвтоМасштаб = Истина;
		Результат.ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПИСЬМО_НА_ОТГРУЗКУ";
		
	ИначеЕсли Документ = "Приложение" Тогда
		Результат.ДанныеДляПечати = "ДанныеДляПечатнойФормыПриложение(СтруктураОбъектов.Значение, ПараметрыПечати)";
		Результат.ЗаполнитьТабличныйДокумент =
			"ЗаполнитьТабличныйДокументПриложение(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати);";
		
		Результат.ТабличныйДокумент.АвтоМасштаб = Истина;
		Результат.ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПРИЛОЖЕНИЕ";
		Результат.ТабличныйДокумент.НижнийКолонтитул.ТекстСлева = "ФП АМС 01-01-2010/34";	
		Результат.ТабличныйДокумент.ПолеСнизу = "16";
		
	ИначеЕсли Документ = "РаспоряжениеНаПогрузкуМеталлСклад" Тогда
		Результат.ДанныеДляПечати = "ДанныеДляПечатнойФормыРаспоряжениеНаПогрузкуМС(СтруктураОбъектов.Значение, ПараметрыПечати)";
		Результат.ЗаполнитьТабличныйДокумент =
			"ЗаполнитьТабличныйДокументРаспоряжениеНаПогрузкуМС(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати);";
		
		Результат.ТабличныйДокумент.АвтоМасштаб = Истина;
		Результат.ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РАСПОРЯЖЕНИЕ_НА_ПОГРУЗКУ_МЕТАЛЛ_СКЛАД";
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция СформироватьПечатнуюФорму(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, Знач Документ)
	
	ПараметрыПечатиДокумента = ПараметрыПечатиДокумента(Документ);
	
	ТабличныйДокумент = ПараметрыПечатиДокумента.ТабличныйДокумент;
	
	НомерТипаДокумента = 0;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ДанныеДляПечати = Вычислить(ПараметрыПечатиДокумента.ДанныеДляПечати);
				
		Выполнить(ПараметрыПечатиДокумента.ЗаполнитьТабличныйДокумент);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#Область СчетОферта

Функция ДанныеДляПечатнойФормыСчетаОферты(Знач МассивОбъектов, ПараметрыПечати = Неопределено)
	
	Если ПараметрыПечати <> Неопределено И ПараметрыПечати.Свойство("ОтображатьСкидки") Тогда
		ОтображатьСкидки = ПараметрыПечати.ОтображатьСкидки;
	Иначе
		ОтображатьСкидки = (Константы.ОтображениеСкидокВПечатныхФормахДокументовПродажи.Получить()
		<> Перечисления.ВариантыВыводаСкидокВПечатныхФормах.НеВыводитьСкидки);
	КонецЕсли;
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов();
	ИмяКолонкиКодов = КолонкаКодов.ИмяКолонки;
	ПредставлениеКолонкиКодов = КолонкаКодов.ПредставлениеКолонки;
	ВыводитьКоды = Не ПустаяСтрока(ИмяКолонкиКодов);
	
	ПараметрыПечати.Вставить("ВыводитьКоды", ВыводитьКоды);
	ПараметрыПечати.Вставить("ИмяКолонкиКодов", ИмяКолонкиКодов);
	ПараметрыПечати.Вставить("ЕстьСкидки", Ложь);
	
	ДанныеПечати = Новый Соответствие;
	
	Запрос = Новый Запрос;

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка,
	|	Организации.Наименование КАК Наименование,
	|	Организации.ИНН КАК ИНН,
	|	Организации.ФайлЛоготип КАК ФайлЛоготип,
	|	Организации.ФайлФаксимильнаяПечать КАК ФайлФаксимильнаяПечать,
	|	Организации.НаименованиеПолное КАК НаименованиеПолное,
	|	Организации.НаименованиеСокращенное КАК НаименованиеСокращенное
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК Ссылка,
	|	ЗаказКлиента.Номер КАК Номер,
	|	ЗаказКлиента.Дата КАК Дата,
	|	ЗаказКлиента.Организация КАК Организация,
	|	ЗаказКлиента.БанковскийСчет КАК БСчетОрганизации,
	|	Организации.ИНН КАК ИННОрганизации,
	|	Организации.Наименование КАК НаименованиеОрганизации,
	|	Организации.НаименованиеПолное КАК ПолноеНаименованиеОрганизации,
	|	Организации.НаименованиеСокращенное КАК КраткоеНаименованиеОрганизации,
	|	Организации.ФайлЛоготип КАК ЛоготипОрганизации,
	|	Организации.ФайлФаксимильнаяПечать КАК ФаксимильнаяПечатьОрганизации,
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.Грузоотправитель = &ПустойКонтрагент
	|			ТОГДА ЗаказКлиента.Организация
	|		ИНАЧЕ ЗаказКлиента.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.Грузополучатель = &ПустойКонтрагент
	|			ТОГДА ЗаказКлиента.Контрагент
	|		ИНАЧЕ ЗаказКлиента.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ЗаказКлиента.Контрагент КАК Получатель,
	|	ЗаказКлиента.СуммаДокумента КАК СуммаДокумента,
	|	ЗаказКлиента.Договор КАК ДоговорКонтрагента,
	|	ЗаказКлиента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ЗаказКлиента.Валюта КАК ВалютаДокумента,
	|	ЗаказКлиента.ITS_СрокПоставки КАК СрокПоставки,
	|	ЗаказКлиента.ITS_УсловияПоставки КАК УсловияПоставки,
	|	ВЫРАЗИТЬ(ЗаказКлиента.ITS_ДопУсловияПоставки КАК СТРОКА(400)) КАК ДопУсловияПоставки,
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИЛИ ЗаказКлиента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|		ИЛИ ЗаказКлиента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаПоПатенту)
	|		ИЛИ ЗаказКлиента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УчитыватьНДС,
	|	ЗаказКлиента.Менеджер КАК Ответственный
	|ПОМЕСТИТЬ ЗаказКлиента
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Организации КАК Организации
	|		ПО ЗаказКлиента.Организация = Организации.Ссылка
	|ГДЕ
	|	ЗаказКлиента.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
	|	ЗаказКлиентаТовары.Номенклатура.НаименованиеПолное КАК Товар,
	|	ЗаказКлиентаТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаказКлиентаТовары.Номенклатура.Код КАК Код,
	|	ВЫРАЗИТЬ(ЗаказКлиентаТовары.Номенклатура.Артикул КАК СТРОКА(150)) КАК Артикул,
	|	СУММА(ЗаказКлиентаТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ЗаказКлиентаТовары.Количество) КАК Количество,
	|	СУММА(ЗаказКлиентаТовары.Сумма) КАК Сумма,
	|	ЗаказКлиентаТовары.Цена КАК Цена,
	|	ЗаказКлиентаТовары.СуммаНДС КАК СуммаНДС,
	|	ЗаказКлиентаТовары.СуммаСНДС КАК СуммаСНДС,
	|   ВЫБОР КОГДА &ОтображатьСкидки ТОГДА
	|		ЗаказКлиентаТовары.ПроцентРучнойСкидки + ЗаказКлиентаТовары.ПроцентАвтоматическойСкидки
	|   	  ИНАЧЕ 0 
	|	КОНЕЦ КАК Скидка,
	|	ЗаказКлиентаТовары.Характеристика КАК Характеристика,
	|	NULL КАК Серия,
	|	ЗаказКлиентаТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|ГДЕ
	|	ЗаказКлиентаТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ЗаказКлиента КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаТовары.Номенклатура,
	|	ЗаказКлиентаТовары.Номенклатура.ЕдиницаИзмерения,
	|	ЗаказКлиентаТовары.Номенклатура.Код,
	|	ЗаказКлиентаТовары.Номенклатура.НаименованиеПолное,
	|	ЗаказКлиентаТовары.Цена,
	|	ЗаказКлиентаТовары.СуммаНДС,
	|	ЗаказКлиентаТовары.СуммаСНДС,
	|	ВЫБОР КОГДА &ОтображатьСкидки ТОГДА
	|		ЗаказКлиентаТовары.ПроцентРучнойСкидки + ЗаказКлиентаТовары.ПроцентАвтоматическойСкидки
	|   	ИНАЧЕ 0
	|	КОНЕЦ,
	|	ЗаказКлиентаТовары.Характеристика,
	|	ЗаказКлиентаТовары.Ссылка,
	|	ВЫРАЗИТЬ(ЗаказКлиентаТовары.Номенклатура.Артикул КАК СТРОКА(150))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК Ссылка,
	|	МИНИМУМ(ЗаказКлиента.Номер) КАК Номер,
	|	МИНИМУМ(ЗаказКлиента.Дата) КАК Дата,
	|	МИНИМУМ(ЗаказКлиента.Организация) КАК Организация,
	|	МИНИМУМ(ЗаказКлиента.БСчетОрганизации) КАК БСчетОрганизации,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Товар КАК Товар,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.Код КАК Код,
	|	Товары.Артикул КАК Артикул,
	|	СУММА(Товары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(Товары.Количество) КАК Количество,
	|	СУММА(Товары.Сумма) КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	СУММА(Товары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Товары.СуммаСНДС) КАК СуммаСНДС,
	|	Товары.Скидка КАК Скидка,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	МИНИМУМ(ЗаказКлиента.ИННОрганизации) КАК ИННОрганизации,
	|	МИНИМУМ(ЗаказКлиента.НаименованиеОрганизации) КАК НаименованиеОрганизации,
	|	МИНИМУМ(ЗаказКлиента.ПолноеНаименованиеОрганизации) КАК ПолноеНаименованиеОрганизации,
	|	МИНИМУМ(ЗаказКлиента.КраткоеНаименованиеОрганизации) КАК КраткоеНаименованиеОрганизации,
	|	МИНИМУМ(ЗаказКлиента.ЛоготипОрганизации) КАК ЛоготипОрганизации,
	|	МИНИМУМ(ЗаказКлиента.ФаксимильнаяПечатьОрганизации) КАК ФаксимильнаяПечатьОрганизации,
	|	МИНИМУМ(ЗаказКлиента.Грузоотправитель) КАК Грузоотправитель,
	|	МИНИМУМ(ЗаказКлиента.Грузополучатель) КАК Грузополучатель,
	|	МИНИМУМ(ЗаказКлиента.Получатель) КАК Получатель,
	|	МИНИМУМ(ЗаказКлиента.СуммаДокумента) КАК СуммаДокумента,
	|	МИНИМУМ(ЗаказКлиента.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	|	МИНИМУМ(ЗаказКлиента.УчитыватьНДС) КАК УчитыватьНДС,
	|	МИНИМУМ(ЗаказКлиента.ЦенаВключаетНДС) КАК ЦенаВключаетНДС,
	|	МИНИМУМ(ЗаказКлиента.ВалютаДокумента) КАК ВалютаДокумента,
	|	МИНИМУМ(ЗаказКлиента.СрокПоставки) КАК СрокПоставки,
	|	МИНИМУМ(ЗаказКлиента.УсловияПоставки) КАК УсловияПоставки,
	|	МИНИМУМ(ЗаказКлиента.ДопУсловияПоставки) КАК ДопУсловияПоставки,
	|	МИНИМУМ(ЗаказКлиента.Ответственный) КАК Ответственный
	|ИЗ
	|	ЗаказКлиента КАК ЗаказКлиента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Товары КАК Товары
	|		ПО (ЗаказКлиента.Ссылка = Товары.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиента.Ссылка,
	|	Товары.Номенклатура,
	|	Товары.Товар,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.Код,
	|	Товары.Артикул,
	|	Товары.Цена,
	|	Товары.Скидка,
	|	Товары.Характеристика,
	|	Товары.Серия
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка()); 
	Запрос.УстановитьПараметр("ОтображатьСкидки", ОтображатьСкидки);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПоДокументам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СведенияОЮрФизЛице = Новый Соответствие;
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Ключ = СтрШаблон("%1#%2", ВыборкаПоДокументам.ИННОрганизации, Формат(ВыборкаПоДокументам.Дата, "ДФ=dd_MM_yy"));
		СведенияОбОрганизации = СведенияОЮрФизЛице.Получить(Ключ);
		Если СведенияОбОрганизации = Неопределено Тогда
			
			БСчетОрганизации = ВыборкаПоДокументам.БСчетОрганизации;
			Если БСчетОрганизации.Пустая() Тогда
			БСчетОрганизации = Справочники.БанковскиеСчетаОрганизаций.ITS_ОсновнойБанковскийСчетОрганизации(
				ВыборкаПоДокументам.Организация);
			КонецЕсли;
			
			СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
				ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.Дата, БСчетОрганизации);
			
			СведенияОЮрФизЛице.Вставить(Ключ, СведенияОбОрганизации);	
			
		КонецЕсли;
				
		СтруктураПечати = Новый Структура;
		
		СтруктураПечати.Вставить("УчитыватьНДС", ВыборкаПоДокументам.УчитыватьНДС);
		
		Шапка = Новый Структура;
		Если ТипЗнч(СведенияОбОрганизации) = Тип("Структура") Тогда
			Если СведенияОбОрганизации.Свойство("Банк") Тогда					
				Шапка.Вставить("БанкПолучателяПредставление", СведенияОбОрганизации.Банк);
			КонецЕсли;
			Если СведенияОбОрганизации.Свойство("БИК") Тогда
				Шапка.Вставить("БИКБанкаПолучателя", СведенияОбОрганизации.БИК);
			КонецЕсли;
			Если СведенияОбОрганизации.Свойство("ИНН") Тогда
				Шапка.Вставить("ИНН", СведенияОбОрганизации.ИНН);
			КонецЕсли;
			Если СведенияОбОрганизации.Свойство("КПП") Тогда
				Шапка.Вставить("КПП", СведенияОбОрганизации.КПП);
			КонецЕсли;
			Если СведенияОбОрганизации.Свойство("КоррСчет") Тогда
				Шапка.Вставить("СчетБанкаПолучателяПредставление", СведенияОбОрганизации.КоррСчет);
			КонецЕсли;
			Если СведенияОбОрганизации.Свойство("НомерСчета") Тогда
				Шапка.Вставить("СчетПолучателяПредставление", СведенияОбОрганизации.НомерСчета);
			КонецЕсли;
			Если СведенияОбОрганизации.Свойство("НомерСчета") Тогда
				Шапка.Вставить("ПредставлениеПоставщикаДляПлатПоручения", СведенияОбОрганизации.НаименованиеДляПечатныхФорм);
			КонецЕсли;
		КонецЕсли;
		ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(
			ВыборкаПоДокументам, НСтр("ru='Счет на оплату'"));
		Шапка.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		
		ДД = Неопределено;
		Если ЗначениеЗаполнено(ВыборкаПоДокументам.ЛоготипОрганизации) Тогда
			ДД = РаботаСФайлами.ДвоичныеДанныеФайла(ВыборкаПоДокументам.ЛоготипОрганизации, Ложь);
		КонецЕсли;
		
		Если ДД <> Неопределено Тогда
			ЛоготипОрганизации = Новый Картинка(ДД, Истина);
		Иначе
			ЛоготипОрганизации = Новый Картинка;
		КонецЕсли;
		Шапка.Вставить("ЛоготипОрганизации", ЛоготипОрганизации);
		
		ПредставлениеПоставщикаДляПлатПоручения = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			СведенияОбОрганизации, "ПолноеНаименование,");
		
		Шапка.Вставить("ПредставлениеПоставщикаДляПлатПоручения", ПредставлениеПоставщикаДляПлатПоручения);
		Шапка.Вставить("ТекстПоставщик", "Поставщик:");
		
		Шапка.Вставить("ПредставлениеПоставщика", ФормированиеПечатныхФорм.ОписаниеОрганизации(
			СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
			
		Если ВыборкаПоДокументам.Организация = ВыборкаПоДокументам.Грузоотправитель Тогда
			Шапка.Вставить("ПредставлениеГрузоотправителя", Шапка.ПредставлениеПоставщика);
		Иначе
			Шапка.Вставить("ПредставлениеГрузоотправителя", БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
				ВыборкаПоДокументам.Грузоотправитель, ВыборкаПоДокументам.Дата),
				"ПолноеНаименование,ИНН,КПП,ФактическийАдрес,Телефоны,");
		КонецЕсли;
			
		СведенияОПолучателе = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
			ВыборкаПоДокументам.Получатель, ВыборкаПоДокументам.Дата);
		
		Шапка.Вставить("ТекстПокупатель", "Покупатель:");
		
		ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПолучателе,
		 	"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,");
		 
		Шапка.Вставить("ПредставлениеПолучателя", ПредставлениеПолучателя);
		
		ПредставлениеГрузополучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
				ВыборкаПоДокументам.Грузополучатель,
				ВыборкаПоДокументам.Дата),
				"ПолноеНаименование,ИНН,КПП,ФактическийАдрес,Телефоны,");
		
		Шапка.Вставить("ПредставлениеГрузополучателя", ПредставлениеГрузополучателя);	
        Шапка.Вставить("СрокПоставки", ВыборкаПоДокументам.СрокПоставки);
		Шапка.Вставить("УсловияПоставки", ВыборкаПоДокументам.УсловияПоставки);
		Шапка.Вставить("ДопУсловияПоставки", ВыборкаПоДокументам.ДопУсловияПоставки);
		
		СтруктураПечати.Вставить("Шапка", Шапка);
		
		Товары = Новый Массив;
		НомерСтроки = 1;
		Сумма = 0;
		СуммаНДС = 0;
		ВсегоСкидок = 0;
		ВсегоБезСкидок = 0;
		ВсегоКоличество = 0;
			
		ВыборкаТовары = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			
			Если ВыборкаТовары.Скидка Тогда
				ПараметрыПечати.ЕстьСкидки = Истина;	
			КонецЕсли;

			СтрокаТовара = Новый Структура;
			
			СтрокаТовара.Вставить("Номенклатура", ВыборкаТовары.Номенклатура);
			СтрокаТовара.Вставить("НомерСтроки", Формат(НомерСтроки, "ЧГ=0"));
			
			Если ПараметрыПечати.ВыводитьКоды Тогда
				Если ИмяКолонкиКодов = "Артикул" Тогда
					СтрокаТовара.Вставить("Артикул", ВыборкаТовары.Артикул);
				Иначе
					СтрокаТовара.Вставить("Артикул", ВыборкаТовары.Код);
				КонецЕсли;
			КонецЕсли;
			
			СтрокаТовара.Вставить("Количество", ВыборкаТовары.КоличествоУпаковок);
			СтрокаТовара.Вставить("ЕдиницаИзмерения", ВыборкаТовары.ЕдиницаИзмерения);
			СтрокаТовара.Вставить("Цена", ВыборкаТовары.Цена);
			СтрокаТовара.Вставить("Товар", ВыборкаТовары.Товар);
			
			Скидка = Ценообразование.ПолучитьСуммуСкидки(ВыборкаТовары.Сумма, ВыборкаТовары.Скидка);

			Если ПараметрыПечати.ЕстьСкидки Тогда
				СтрокаТовара.Вставить("Скидка", Скидка);
				СтрокаТовара.Вставить("СуммаБезСкидки", ВыборкаТовары.Сумма + Скидка);
			КонецЕсли;
			
			СтрокаТовара.Вставить("Сумма", ВыборкаТовары.Сумма); 
			
			Сумма          = Сумма       + СтрокаТовара.Сумма;
			СуммаНДС       = СуммаНДС    + ВыборкаТовары.СуммаНДС;
			ВсегоСкидок    = ВсегоСкидок + Скидка;
			ВсегоБезСкидок = Сумма       + ВсегоСкидок;
			ВсегоКоличество = ВсегоКоличество + СтрокаТовара.Количество;
					
			//#Если ВнешнееСоединение Тогда
			//	WEBПриложения.ПодготовитьСтруктуруДляВнешнегоСоединения(ПараметрыПозиции);
			//#КонецЕсли
			
			Товары.Добавить(СтрокаТовара);
			
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
		СтруктураПечати.Вставить("Товары", Товары);
		
		Подвал = Новый Структура;
		Подвал.Вставить("Сумма", Сумма);
		Подвал.Вставить("СуммаНДС", СуммаНДС);
		Подвал.Вставить("ВсегоСкидок", ВсегоСкидок);
		Подвал.Вставить("ВсегоБезСкидок", ВсегоБезСкидок);
		Подвал.Вставить("ВсегоКоличество", ВсегоКоличество);
		
		// Вывести Итого
		Если ПараметрыПечати.ЕстьСкидки Тогда
			Подвал.Вставить("ВсегоСкидок", ВсегоСкидок);
			Подвал.Вставить("ВсегоБезСкидок", ВсегоБезСкидок);	
		КонецЕсли;
		
		Подвал.Вставить("Всего", ОбщегоНазначения.ФорматСумм(Сумма));
		Подвал.Вставить("ВсегоКоличество", ВсегоКоличество); 
		Подвал.Вставить("СрокПоставки", ВыборкаПоДокументам.СрокПоставки); 
		Подвал.Вставить("УсловияПоставки", ВыборкаПоДокументам.УсловияПоставки); 
		//ПараметрыПечати.Вставить("Пункт5", СсылкаНаОбъект.Пункт5); 
		
		// Вывести ИтогоНДС
		Если ВыборкаПоДокументам.УчитыватьНДС Тогда
			Подвал.Вставить("НДС", ?(ВыборкаПоДокументам.ЦенаВключаетНДС, "В том числе НДС:", "Сумма НДС:"));
			Подвал.Вставить("ВсегоНДС", ОбщегоНазначения.ФорматСумм(СуммаНДС));
			Подвал.Вставить("ВсегоКОплате", ОбщегоНазначения.ФорматСумм(Сумма + ?(ВыборкаПоДокументам.ЦенаВключаетНДС, 0, СуммаНДС)));
		КонецЕсли;
		
		// Вывести Сумму прописью
		СуммаКПрописи = Сумма + ?(ВыборкаПоДокументам.ЦенаВключаетНДС, 0, СуммаНДС);
		
		Подвал.Вставить("ИтоговаяСтрока", "Всего наименований " + ВсегоКоличество
			+ ", на сумму " + ОбщегоНазначения.ФорматСумм(СуммаКПрописи, ВыборкаПоДокументам.ВалютаДокумента));
			
		Подвал.Вставить("СуммаПрописью", ОбщегоНазначения.СформироватьСуммуПрописью(СуммаКПрописи, ВыборкаПоДокументам.ВалютаДокумента));
		
		// Вывести подписи
		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.Дата);
		Руководитель = Руководители.Руководитель;
		Если ЗначениеЗаполнено(Руководитель) Тогда
			Руководитель = Руководители.РуководительПредставление;
		КонецЕсли;
		
		ДолжностьРуководителя = Руководители.РуководительДолжность;
		
		Бухгалтер = Руководители.ГлавныйБухгалтер;
		Если ЗначениеЗаполнено(Бухгалтер) Тогда
			Бухгалтер = Руководители.ГлавныйБухгалтерПредставление;
		КонецЕсли;

		
		Подвал.Вставить("ФИОРуководителя", 		Руководитель);
		Подвал.Вставить("ДолжностьРуководителя", 	ДолжностьРуководителя);
		Подвал.Вставить("ФИОБухгалтера", 			Бухгалтер);
		
		Если ЗначениеЗаполнено(ВыборкаПоДокументам.Ответственный) Тогда
			ФизЛицоОтветственный = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаПоДокументам.Ответственный, "ФизическоеЛицо");
			ФИООтветственный = "";
			Если ЗначениеЗаполнено(ФизЛицоОтветственный) Тогда
				НаименованиеОтветственного = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФизЛицоОтветственный, "Наименование");
				ФИООтветственный = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(НаименованиеОтветственного);
			Иначе
				НаименованиеОтветственного = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаПоДокументам.Ответственный, "Наименование");
				ФИООтветственный = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(НаименованиеОтветственного);
			КонецЕсли;
			Подвал.Вставить("ФИООтветственный", ФИООтветственный);
		КонецЕсли;
			
		//#Если ВнешнееСоединение Тогда
		//	WEBПриложения.ПодготовитьСтруктуруДляВнешнегоСоединения(ПараметрыПечати);
		//#КонецЕсли
		
		СтруктураПечати.Вставить("Подвал", Подвал);
		
		ДанныеПечати.Вставить(ВыборкаПоДокументам.Ссылка, СтруктураПечати);
		
	КонецЦикла;
	
	Возврат ДанныеПечати;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументСчетаОферты(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)
	
	ПредставлениеВОшибке = Нстр("ru = 'Заказ клиента'");
	ШаблонОшибкиТовары	= НСтр("ru = 'В документе %1 отсутствуют товары. Печать %2 не требуется'");
	ПервыйДокумент = Истина;
	
	Для Каждого Параметр Из ДанныеДляПечати Цикл
		
		Документ = Параметр.Значение;
		
		Товары = Документ.Товары;
		
		Если Товары.Количество() = 0 Тогда
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибкиТовары,
			Документ,
			ПредставлениеВОшибке);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Документ);
			
			Возврат;
			
		КонецЕсли;
	
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = Обработки.ITS_ПечатьДокументов.ПолучитьМакет("ПФ_MXL_СчетЗаказ");
		
		Шапка = Документ.Шапка;
		
		ОбластьЗаголовокСчета = Макет.ПолучитьОбласть("ЗаголовокСчета");
		ОбластьЗаголовокСчета.Параметры.Заполнить(Шапка);
		ОбластьЗаголовокСчета.Рисунки.ЛоготипОрганизации.Картинка = Шапка.ЛоготипОрганизации;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовокСчета);
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьЗаголовок.Параметры.Заполнить(Шапка);
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ОбластьПриложение = Макет.ПолучитьОбласть("Приложение");
		ОбластьПриложение.Параметры.Заполнить(Шапка);
		
		ТабличныйДокумент.Вывести(ОбластьПриложение);
		
		
		ОбластьПоставщик = Макет.ПолучитьОбласть("Поставщик");
		ОбластьПоставщик.Параметры.Заполнить(Шапка);
		
		ТабличныйДокумент.Вывести(ОбластьПоставщик);
		
		ОбластьПокупатель = Макет.ПолучитьОбласть("Покупатель");
		ОбластьПокупатель.Параметры.Заполнить(Шапка);
		
		ТабличныйДокумент.Вывести(ОбластьПокупатель);
		
		ОбластьТовар = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
		Если Не ПараметрыПечати.ВыводитьКоды И ПараметрыПечати.ЕстьСкидки Тогда
			ОбластьТовар = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварБезКодов");
		ИначеЕсли НЕ ПараметрыПечати.ЕстьСкидки И ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьТовар = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварБезСкидок");
		ИначеЕсли НЕ ПараметрыПечати.ЕстьСкидки И НЕ ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьТовар = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварБезКодовИСкидок");
		КонецЕсли;
			
		ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьСкидок = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
		ОбластьСуммы  = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		
		ОбластьТовар = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
		Если Не ПараметрыПечати.ВыводитьКоды И ПараметрыПечати.ЕстьСкидки Тогда
			ОбластьТовар = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварБезКодов");
		ИначеЕсли НЕ ПараметрыПечати.ЕстьСкидки И ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьТовар = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварБезСкидок");
		ИначеЕсли НЕ ПараметрыПечати.ЕстьСкидки И НЕ ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьТовар = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварБезКодовИСкидок");
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьНомера);
		Если ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = ПараметрыПечати.ИмяКолонкиКодов;
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ОбластьТовар.Параметры.Товар = "Товары (работы, услуги)";
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		Если ПараметрыПечати.ЕстьСкидки Тогда
			ТабличныйДокумент.Присоединить(ОбластьСкидок);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьСуммы);
		
		Для Каждого СтрокаТовара Из Товары Цикл
			
			ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
			ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");
			ОбластьСкидок = Макет.ПолучитьОбласть("Строка|Скидка");
			ОбластьСуммы  = Макет.ПолучитьОбласть("Строка|Сумма");
			
			ОбластьТовар = Макет.ПолучитьОбласть("Строка|Товар");
			Если Не ПараметрыПечати.ВыводитьКоды И ПараметрыПечати.ЕстьСкидки Тогда
				ОбластьТовар = Макет.ПолучитьОбласть("Строка|ТоварБезКодов");
			ИначеЕсли НЕ ПараметрыПечати.ЕстьСкидки И ПараметрыПечати.ВыводитьКоды Тогда
				ОбластьТовар = Макет.ПолучитьОбласть("Строка|ТоварБезСкидок");
			ИначеЕсли НЕ ПараметрыПечати.ЕстьСкидки И НЕ ПараметрыПечати.ВыводитьКоды Тогда
				ОбластьТовар = Макет.ПолучитьОбласть("Строка|ТоварБезКодовИСкидок");
			КонецЕсли;
			
			ОбластьНомера.Параметры.НомерСтроки = СтрокаТовара.НомерСтроки;
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ПараметрыПечати.ВыводитьКоды Тогда
				ОбластьКодов.Параметры.Заполнить(СтрокаТовара);
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьТовар.Параметры.Заполнить(СтрокаТовара);
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			
			ОбластьДанных.Параметры.Заполнить(СтрокаТовара);
			
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			Если ПараметрыПечати.ЕстьСкидки Тогда
				ОбластьСкидок.Параметры.Заполнить(СтрокаТовара);
				ТабличныйДокумент.Присоединить(ОбластьСкидок);
			КонецЕсли;
			
			ОбластьСуммы.Параметры.Заполнить(СтрокаТовара);
			ТабличныйДокумент.Присоединить(ОбластьСуммы);
			
		КонецЦикла;
		
		Подвал = Документ.Подвал;
		
		// Вывести Итого
		ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");
		ОбластьСкидок = Макет.ПолучитьОбласть("Итого|Скидка");
		ОбластьСуммы  = Макет.ПолучитьОбласть("Итого|Сумма");
		
		ОбластьТовар = Макет.ПолучитьОбласть("Итого|Товар");
		Если Не ПараметрыПечати.ВыводитьКоды И ПараметрыПечати.ЕстьСкидки Тогда
			ОбластьТовар = Макет.ПолучитьОбласть("Итого|ТоварБезКодов");
		ИначеЕсли НЕ ПараметрыПечати.ЕстьСкидки И ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьТовар = Макет.ПолучитьОбласть("Итого|ТоварБезСкидок");
		ИначеЕсли НЕ ПараметрыПечати.ЕстьСкидки И НЕ ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьТовар = Макет.ПолучитьОбласть("Итого|ТоварБезКодовИСкидок");
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьНомера);
		
		Если ПараметрыПечати.ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		
		ОбластьДанных.Параметры.Заполнить(Подвал);
		
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		
		Если ПараметрыПечати.ЕстьСкидки Тогда
			ОбластьСкидок.Параметры.Заполнить(Подвал);
			ТабличныйДокумент.Присоединить(ОбластьСкидок);
		КонецЕсли;
		ОбластьСуммы.Параметры.Заполнить(Подвал);
		
		ТабличныйДокумент.Присоединить(ОбластьСуммы);
		
		// Вывести ИтогоНДС
		Если Документ.УчитыватьНДС Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ИтогоНДС|КолонкаКодов");
			ОбластьДанных = Макет.ПолучитьОбласть("ИтогоНДС|Данные");
			ОбластьСкидок = Макет.ПолучитьОбласть("ИтогоНДС|Скидка");
			ОбластьСуммы  = Макет.ПолучитьОбласть("ИтогоНДС|Сумма");
			
			ОбластьТовар = Макет.ПолучитьОбласть("ИтогоНДС|Товар");
			Если Не ПараметрыПечати.ВыводитьКоды И ПараметрыПечати.ЕстьСкидки Тогда
				ОбластьТовар = Макет.ПолучитьОбласть("ИтогоНДС|ТоварБезКодов");
			ИначеЕсли НЕ ПараметрыПечати.ЕстьСкидки И ПараметрыПечати.ВыводитьКоды Тогда
				ОбластьТовар = Макет.ПолучитьОбласть("ИтогоНДС|ТоварБезСкидок");
			ИначеЕсли НЕ ПараметрыПечати.ЕстьСкидки И НЕ ПараметрыПечати.ВыводитьКоды Тогда
				ОбластьТовар = Макет.ПолучитьОбласть("ИтогоНДС|ТоварБезКодовИСкидок");
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ПараметрыПечати.ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьТовар.Параметры.Заполнить(Подвал);
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			
			ОбластьДанных.Параметры.Заполнить(Подвал);
			
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			Если ПараметрыПечати.ЕстьСкидки Тогда
				ТабличныйДокумент.Присоединить(ОбластьСкидок);
			КонецЕсли;
			
			ОбластьСуммы.Параметры.Заполнить(Подвал);
			
			ТабличныйДокумент.Присоединить(ОбластьСуммы);
			
			ОбластьНомера = Макет.ПолучитьОбласть("ВсегоКОплате|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ВсегоКОплате|КолонкаКодов");
			ОбластьДанных = Макет.ПолучитьОбласть("ВсегоКОплате|Данные");
			ОбластьСкидок = Макет.ПолучитьОбласть("ВсегоКОплате|Скидка");
			ОбластьСуммы  = Макет.ПолучитьОбласть("ВсегоКОплате|Сумма");
			
			ОбластьТовар = Макет.ПолучитьОбласть("ВсегоКОплате|Товар");
			Если Не ПараметрыПечати.ВыводитьКоды И ПараметрыПечати.ЕстьСкидки Тогда
				ОбластьТовар = Макет.ПолучитьОбласть("ВсегоКОплате|ТоварБезКодов");
			ИначеЕсли НЕ ПараметрыПечати.ЕстьСкидки И ПараметрыПечати.ВыводитьКоды Тогда
				ОбластьТовар = Макет.ПолучитьОбласть("ВсегоКОплате|ТоварБезСкидок");
			ИначеЕсли НЕ ПараметрыПечати.ЕстьСкидки И НЕ ПараметрыПечати.ВыводитьКоды Тогда
				ОбластьТовар = Макет.ПолучитьОбласть("ВсегоКОплате|ТоварБезКодовИСкидок");
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ПараметрыПечати.ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьТовар.Параметры.Заполнить(Подвал);
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			
			ОбластьДанных.Параметры.Заполнить(Подвал);
			
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			Если ПараметрыПечати.ЕстьСкидки Тогда
				ТабличныйДокумент.Присоединить(ОбластьСкидок);
			КонецЕсли;
			
			ОбластьСуммы.Параметры.Заполнить(Подвал);
			
			ТабличныйДокумент.Присоединить(ОбластьСуммы);
			
		КонецЕсли;
		
		// Вывести Сумму прописью
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		ОбластьМакета.Параметры.Заполнить(Подвал);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Вывести подписи
		Если ПараметрыПечати.ОтображатьФаксимиле Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчета");
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалСчетаБезФаксимиле");
		КонецЕсли;
	
		ОбластьМакета.Параметры.Заполнить(Подвал);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			Документ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПисьмоНаОтгрузку

Функция ДанныеДляПечатнойФормыПисьмоНаОтгрузку(Знач МассивОбъектов, ПараметрыПечати = Неопределено)
	
	ДанныеПечати = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Приложение.Ссылка КАК Ссылка,
		|	Приложение.Организация КАК Организация,
		|	Приложение.Номер КАК Номер,
		|	Приложение.Дата КАК Дата,
		|	Приложение.Менеджер КАК Ответственный,
		|	"""" КАК ВидДоставки,
		|	Приложение.Контрагент.НаименованиеПолное КАК Контрагент,
		|	ВЫБОР
		|		КОГДА Приложение.Грузополучатель = &ПустойКонтрагент
		|			ТОГДА Приложение.Контрагент.НаименованиеПолное
		|		ИНАЧЕ Приложение.Грузополучатель.НаименованиеПолное
		|	КОНЕЦ КАК Грузополучатель,
		|	ВЫБОР
		|		КОГДА Приложение.Грузополучатель = &ПустойКонтрагент
		|			ТОГДА Приложение.Контрагент.КодПоОКПО
		|		ИНАЧЕ Приложение.Грузополучатель.КодПоОКПО
		|	КОНЕЦ КАК ОКПО,
		|	"""" КАК СтанцияНазначения,
		|	"""" КАК КодСтанции,
		|	Приложение.КонтактноеЛицо КАК КонтактноеЛицо,
		|	"""" КАК Телефон,
		|	"""" КАК ДатаДоставки,
		|	"""" КАК СтоимостьДоставки,
		|	Приложение.АдресДоставки КАК АдресДоставки,
		|	Приложение.Договор КАК ДоговорКонтрагента,
		|	Приложение.Организация.ФайлЛоготип КАК ЛоготипОрганизации
		|ПОМЕСТИТЬ Приложение
		|ИЗ
		|	Документ.ЗаказКлиента КАК Приложение
		|ГДЕ
		|	Приложение.Ссылка В(&МассивОбъектов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказКлиентаТовары.Ссылка КАК Ссылка,
		|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
		|	СУММА(ЗаказКлиентаТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(ЗаказКлиентаТовары.Количество) КАК Количество,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(400)) КАК Размещение,
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(400)) КАК Комментарий
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|ГДЕ
		|	ЗаказКлиентаТовары.Ссылка В(&МассивОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказКлиентаТовары.Ссылка,
		|	ЗаказКлиентаТовары.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Приложение.Ссылка КАК Ссылка,
		|	МИНИМУМ(Приложение.Организация) КАК Организация,
		|	МИНИМУМ(Приложение.Номер) КАК Номер,
		|	МИНИМУМ(Приложение.Дата) КАК Дата,
		|	МИНИМУМ(Приложение.Ответственный) КАК Ответственный,
		|	МИНИМУМ(Приложение.ВидДоставки) КАК ВидДоставки,
		|	МИНИМУМ(Приложение.Контрагент) КАК Контрагент,
		|	МИНИМУМ(Приложение.Грузополучатель) КАК Грузополучатель,
		|	МИНИМУМ(Приложение.ОКПО) КАК ОКПО,
		|	МИНИМУМ(Приложение.СтанцияНазначения) КАК СтанцияНазначения,
		|	МИНИМУМ(Приложение.КодСтанции) КАК КодСтанции,
		|	МИНИМУМ(Приложение.КонтактноеЛицо) КАК КонтактноеЛицо,
		|	МИНИМУМ(Приложение.Телефон) КАК Телефон,
		|	МИНИМУМ(Приложение.ДатаДоставки) КАК ДатаДоставки,
		|	МИНИМУМ(Приложение.СтоимостьДоставки) КАК СтоимостьДоставки,
		|	МИНИМУМ(Приложение.АдресДоставки) КАК АдресДоставки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	СУММА(Товары.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(Товары.Количество) КАК Количество,
		|	Товары.Размещение КАК Размещение,
		|	Товары.Комментарий КАК Комментарий,
		|	МИНИМУМ(Приложение.ДоговорКонтрагента) КАК ДоговорКонтрагента,
		|	МИНИМУМ(Приложение.ЛоготипОрганизации) КАК ЛоготипОрганизации
		|ИЗ
		|	Приложение КАК Приложение
		|		ЛЕВОЕ СОЕДИНЕНИЕ Товары КАК Товары
		|		ПО (Товары.Ссылка = Приложение.Ссылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	Приложение.Ссылка,
		|	Товары.Номенклатура,
		|	Товары.Размещение,
		|	Товары.Комментарий
		|ИТОГИ ПО
		|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДокументы = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		ДанныеДокумента = Новый Структура;
		ДанныеДокумента.Вставить("Дата", Формат(ВыборкаДокументы.Дата, "ДФ=dd.MM.yyyy"));
	    ДанныеДокумента.Вставить("Номер", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДокументы.Номер, Истина, Истина));
		ДанныеДокумента.Вставить("ДатаПечати", Формат(ТекущаяДатаСеанса(), "ДФ=dd.MM.yyyy"));
		ДанныеДокумента.Вставить("Договор", ВыборкаДокументы.ДоговорКонтрагента);
		ДанныеДокумента.Вставить("Грузополучатель", ВыборкаДокументы.Грузополучатель);
		ДанныеДокумента.Вставить("Контрагент", ВыборкаДокументы.Контрагент);
		ДанныеДокумента.Вставить("Организация", ВыборкаДокументы.Организация);
		ДанныеДокумента.Вставить("ВидДоставки", ВыборкаДокументы.ВидДоставки);
		ДанныеДокумента.Вставить("ОКПО", ВыборкаДокументы.ОКПО);
		ДанныеДокумента.Вставить("СтанцияНазначения", ВыборкаДокументы.СтанцияНазначения);
		ДанныеДокумента.Вставить("КодСтанции", ВыборкаДокументы.КодСтанции);
		ДанныеДокумента.Вставить("КонтактноеЛицо", ВыборкаДокументы.КонтактноеЛицо);
		ДанныеДокумента.Вставить("Телефон", ВыборкаДокументы.Телефон);
		ДанныеДокумента.Вставить("ДатаДоставки", ВыборкаДокументы.ДатаДоставки);
		ДанныеДокумента.Вставить("СтоимостьДоставки", ВыборкаДокументы.СтоимостьДоставки);
		ДанныеДокумента.Вставить("АдресДоставки", ВыборкаДокументы.АдресДоставки);
		
		Если ЗначениеЗаполнено(ВыборкаДокументы.Ответственный) Тогда
			НаименованиеОтветственного = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаДокументы.Ответственный ,"Наименование");
			ДанныеДокумента.Вставить("ФИООтветственный", ФизическиеЛицаКлиентСервер.ФамилияИнициалы(НаименованиеОтветственного));
		КонецЕсли;
		
		ДД = Неопределено;
		Если ЗначениеЗаполнено(ВыборкаДокументы.ЛоготипОрганизации) Тогда
			ДД = РаботаСФайлами.ДвоичныеДанныеФайла(ВыборкаДокументы.ЛоготипОрганизации, Ложь);
		КонецЕсли;
		
		Если ДД <> Неопределено Тогда
			ЛоготипОрганизации = Новый Картинка(ДД, Истина);
		Иначе
			ЛоготипОрганизации = Новый Картинка;
		КонецЕсли;
		
		ДанныеДокумента.Вставить("ЛоготипОрганизации", ЛоготипОрганизации);
		
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(ВыборкаДокументы.Организация, ВыборкаДокументы.Дата);
		Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
			ДанныеДокумента.Вставить("ФИОРуководителя", ОтветственныеЛица.РуководительПредставление);	
		КонецЕсли;
		
		ДанныеДокумента.Вставить("ИтогКоличество", ВыборкаДокументы.КоличествоУпаковок);
		
		ВыборкаТовары = ВыборкаДокументы.Выбрать();
		
		Товары = Новый Массив;
		Итог = 0;
		НомерСтроки = 1;
		Пока ВыборкаТовары.Следующий() Цикл
			СтрокаТовары = Новый Структура;
			СтрокаТовары.Вставить("НомерСтроки", НомерСтроки);
			СтрокаТовары.Вставить("Номенклатура", ВыборкаТовары.Номенклатура);
			СтрокаТовары.Вставить("Количество", ВыборкаТовары.КоличествоУпаковок);
			
			Товары.Добавить(СтрокаТовары);
			
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
		ДанныеДокумента.Вставить("Товары", Товары); 
		
		ДанныеПечати.Вставить(ВыборкаДокументы.Ссылка, ДанныеДокумента);
	КонецЦикла;
	
	Возврат ДанныеПечати;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументПисьмоНаОтгрузку(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)
	
	ПредставлениеВОшибке = Нстр("ru = 'Заказ клиента'");
	ШаблонОшибкиТовары	= НСтр("ru = 'В документе %1 отсутствуют товары. Печать %2 не требуется'");
	ПервыйДокумент = Истина;
	
	Для Каждого Параметр Из ДанныеДляПечати Цикл
		
		Документ = Параметр.Значение;
		
		Товары = Документ.Товары;
		
		Если Товары.Количество() = 0 Тогда
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибкиТовары,
			Документ,
			ПредставлениеВОшибке);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Документ);
			
			Возврат;
			
		КонецЕсли;
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = ПолучитьМакет("ПФ_MXL_ПисьмоНаОтгрузку");
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Заполнить(Документ);
        ОбластьШапка.Рисунки.ЛоготипОрганизации.Картинка = Документ.ЛоготипОрганизации;
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		Для Каждого СтрокаТовары Из Товары Цикл
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТЧ");
			ОбластьСтрока.Параметры.Заполнить(СтрокаТовары);
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		ОбластьИтог = Макет.ПолучитьОбласть("Итог");
		ОбластьИтог.Параметры.Заполнить(Документ);
		ТабличныйДокумент.Вывести(ОбластьИтог);
		
		ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
		ОбластьПодписи.Параметры.Заполнить(Документ);
		
		ТабличныйДокумент.Вывести(ОбластьПодписи);
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			Документ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Приложение

Функция ДанныеДляПечатнойФормыПриложение(Знач МассивОбъектов, ПараметрыПечати = Неопределено)
	
	ДанныеПечати = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Приложение.Ссылка КАК Ссылка,
	|	Приложение.Организация.НаименованиеПолное КАК ОрганизацияПредставление,
	|	Приложение.Организация КАК Организация,
	|	Приложение.Организация.ФайлЛоготип КАК ЛоготипОрганизации,
	|	Приложение.Контрагент.НаименованиеПолное КАК КонтрагентПредставление,
	|	Приложение.Контрагент КАК Контрагент,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(150)) КАК КонтрагентДолжность,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(150)) КАК КонтрагентПредставитель,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(150)) КАК Основание,
	|	Приложение.Номер КАК Номер,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(150)) КАК ДатаДоговора,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(150)) КАК НомерДоговора,
	|	Приложение.Дата КАК ДатаПриложения,
	|	Приложение.Менеджер КАК Ответственный,
	|	Приложение.Организация КАК Руководители,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(150)) КАК СрокПоставки,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(150)) КАК УсловияПоставки,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(150)) КАК УсловияОплаты,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(150)) КАК Подпись,
	|	Приложение.Организация.НаименованиеПолное КАК ОрганизацияПредстав,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(150)) КАК ДопУсловияПоставки,
	|	Приложение.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(150)) КАК Город
	|ПОМЕСТИТЬ Приложение
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК Приложение
	|ГДЕ
	|	Приложение.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиентуТовары.Ссылка КАК Ссылка,
	|	КоммерческоеПредложениеКлиентуТовары.Номенклатура КАК Номенклатура,
	|	КоммерческоеПредложениеКлиентуТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	КоммерческоеПредложениеКлиентуТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КоммерческоеПредложениеКлиентуТовары.Цена КАК Цена,
	|	СУММА(КоммерческоеПредложениеКлиентуТовары.Сумма) КАК Сумма,
	|	СУММА(КоммерческоеПредложениеКлиентуТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(КоммерческоеПредложениеКлиентуТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК КоммерческоеПредложениеКлиентуТовары
	|ГДЕ
	|	КоммерческоеПредложениеКлиентуТовары.Ссылка В (&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	КоммерческоеПредложениеКлиентуТовары.Ссылка,
	|	КоммерческоеПредложениеКлиентуТовары.Номенклатура,
	|	КоммерческоеПредложениеКлиентуТовары.Номенклатура.НаименованиеПолное,
	|	КоммерческоеПредложениеКлиентуТовары.ЕдиницаИзмерения,
	|	КоммерческоеПредложениеКлиентуТовары.Цена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Приложение.Ссылка КАК Ссылка,
	|	МИНИМУМ(Приложение.ОрганизацияПредставление) КАК ОрганизацияПредставление,
	|	МИНИМУМ(Приложение.ЛоготипОрганизации) КАК ЛоготипОрганизации,
	|	МИНИМУМ(Приложение.Организация) КАК Организация,
	|	МИНИМУМ(Приложение.КонтрагентПредставление) КАК КонтрагентПредставление,
	|	МИНИМУМ(Приложение.Контрагент) КАК Контрагент,
	|	МИНИМУМ(Приложение.КонтрагентДолжность) КАК КонтрагентДолжность,
	|	МИНИМУМ(Приложение.КонтрагентПредставитель) КАК КонтрагентПредставитель,
	|	МИНИМУМ(Приложение.Основание) КАК Основание,
	|	МИНИМУМ(Приложение.Номер) КАК Номер,
	|	МИНИМУМ(Приложение.ДатаДоговора) КАК ДатаДоговора,
	|	МИНИМУМ(Приложение.НомерДоговора) КАК НомерДоговора,
	|	МИНИМУМ(Приложение.ДатаПриложения) КАК ДатаПриложения,
	|	МИНИМУМ(Приложение.Ответственный) КАК Ответственный,
	|	МИНИМУМ(Приложение.Руководители) КАК Руководители,
	|	МИНИМУМ(Приложение.СрокПоставки) КАК СрокПоставки,
	|	МИНИМУМ(Приложение.УсловияПоставки) КАК УсловияПоставки,
	|	МИНИМУМ(Приложение.УсловияОплаты) КАК УсловияОплаты,
	|	МИНИМУМ(Приложение.Подпись) КАК Подпись,
	|	МИНИМУМ(Приложение.ОрганизацияПредстав) КАК ОрганизацияПредстав,
	|	МИНИМУМ(Приложение.ДопУсловияПоставки) КАК ДопУсловияПоставки,
	|	МИНИМУМ(Приложение.ЦенаВключаетНДС) КАК ЦенаВключаетНДС,
	|	МИНИМУМ(Приложение.Город) КАК Город,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.НоменклатураПредставление КАК НоменклатураПредставление,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.Цена КАК Цена,
	|	СУММА(Товары.Сумма) КАК Сумма,
	|	СУММА(Товары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Товары.Количество) КАК Количество
	|ИЗ
	|	Приложение КАК Приложение
	|		ЛЕВОЕ СОЕДИНЕНИЕ Товары КАК Товары
	|		ПО Приложение.Ссылка = Товары.Ссылка
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Приложение.Ссылка,
	|	Товары.Номенклатура,
	|	Товары.НоменклатураПредставление,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.Цена
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДокументы = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		ДанныеДокумента = Новый Структура;
		ДанныеДокумента.Вставить("ДатаДоговора", Формат(ВыборкаДокументы.ДатаДоговора, "ДФ=dd.MM.yyyy"));
		ДанныеДокумента.Вставить("ДатаПриложения", Формат(ВыборкаДокументы.ДатаПриложения, "ДФ=dd.MM.yyyy"));
	    ДанныеДокумента.Вставить("Номер", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДокументы.Номер, Истина, Истина));
		ДанныеДокумента.Вставить("НомерДоговора", ВыборкаДокументы.НомерДоговора);
		ДанныеДокумента.Вставить("ОрганизацияПредставление", ВыборкаДокументы.ОрганизацияПредставление);
		ДанныеДокумента.Вставить("Организация", ВыборкаДокументы.Организация);
		ДанныеДокумента.Вставить("КонтрагентПредставление", ВыборкаДокументы.КонтрагентПредставление);
		ДанныеДокумента.Вставить("Контрагент", ВыборкаДокументы.Контрагент);
		ДанныеДокумента.Вставить("КонтрагентДолжность", ВыборкаДокументы.КонтрагентДолжность);
		ДанныеДокумента.Вставить("КонтрагентПредставитель", ВыборкаДокументы.КонтрагентПредставитель);
		ДанныеДокумента.Вставить("Основание", ВыборкаДокументы.Основание);
		ДанныеДокумента.Вставить("Руководители", ВыборкаДокументы.Руководители);
		ДанныеДокумента.Вставить("СрокПоставки", ВыборкаДокументы.СрокПоставки);
		ДанныеДокумента.Вставить("УсловияПоставки", ВыборкаДокументы.УсловияПоставки);
		ДанныеДокумента.Вставить("УсловияОплаты", ВыборкаДокументы.УсловияОплаты);
		ДанныеДокумента.Вставить("Подпись", ВыборкаДокументы.Подпись);
		ДанныеДокумента.Вставить("ОрганизацияПредстав", ВыборкаДокументы.ОрганизацияПредстав);
		ДанныеДокумента.Вставить("ДопУсловияПоставки", ВыборкаДокументы.ДопУсловияПоставки);
		ДанныеДокумента.Вставить("ЦенаВключаетНДС", ВыборкаДокументы.ЦенаВключаетНДС);
		ДанныеДокумента.Вставить("Город", ВыборкаДокументы.Город);
		
		Если ЗначениеЗаполнено(ВыборкаДокументы.Ответственный) Тогда
			НаименованиеОтветственного = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаДокументы.Ответственный ,"Наименование");
			ДанныеДокумента.Вставить("Ответственный", ФизическиеЛицаКлиентСервер.ФамилияИнициалы(НаименованиеОтветственного));
			ДанныеДокумента.Вставить("Должность","Ответственный менеджер");
		КонецЕсли;
		
		ДД = Неопределено;
		Если ЗначениеЗаполнено(ВыборкаДокументы.ЛоготипОрганизации) Тогда
			ДД = РаботаСФайлами.ДвоичныеДанныеФайла(ВыборкаДокументы.ЛоготипОрганизации, Ложь);
		КонецЕсли;
		
		Если ДД <> Неопределено Тогда
			ЛоготипОрганизации = Новый Картинка(ДД, Истина);
		Иначе
			ЛоготипОрганизации = Новый Картинка;
		КонецЕсли;
		
		ДанныеДокумента.Вставить("ЛоготипОрганизации", ЛоготипОрганизации);
		
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(ВыборкаДокументы.Организация, ВыборкаДокументы.ДатаПриложения);
		Если ЗначениеЗаполнено(ОтветственныеЛица.Руководитель) Тогда
			ДанныеДокумента.Вставить("РуководительФИО", ОтветственныеЛица.РуководительПредставление);
			ДанныеДокумента.Вставить("РуководительДолжность", ОтветственныеЛица.РуководительДолжностьПредставление);
			ДанныеДокумента.Вставить("ОснованиеРук", "Устава");
		КонецЕсли;
		
		ДанныеДокумента.Вставить("Сумма", ВыборкаДокументы.Сумма);
		ДанныеДокумента.Вставить("СуммаНДС", ВыборкаДокументы.СуммаНДС);
		
		Если ВыборкаДокументы.ЦенаВключаетНДС Тогда
			ДанныеДокумента.Вставить("ТекстИтого", "ИТОГО с НДС:");
			ДанныеДокумента.Вставить("ТекстНДС", "В т.ч. НДС 20%:");
		Иначе
			ДанныеДокумента.Вставить("ТекстИтого", "ИТОГО без НДС:");
			ДанныеДокумента.Вставить("ТекстНДС", "НДС 20% сверху:");
		КонецЕсли;
		
		ВыборкаТовары = ВыборкаДокументы.Выбрать();
		
		Товары = Новый Массив;
		НомерСтроки = 1;
		Пока ВыборкаТовары.Следующий() Цикл
			СтрокаТовары = Новый Структура;
			СтрокаТовары.Вставить("Номер", НомерСтроки);
			СтрокаТовары.Вставить("Номенклатура", ВыборкаТовары.НоменклатураПредставление);
			СтрокаТовары.Вставить("Количество", ВыборкаТовары.Количество);
			СтрокаТовары.Вставить("Ед", ВыборкаТовары.ЕдиницаИзмерения);
			СтрокаТовары.Вставить("Цена", ВыборкаТовары.Цена);
			СтрокаТовары.Вставить("Сумма", ВыборкаТовары.Сумма);
			СтрокаТовары.Вставить("СуммаНДС", ВыборкаТовары.СуммаНДС);
			
			Товары.Добавить(СтрокаТовары);
			
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
		ДанныеДокумента.Вставить("Товары", Товары); 
		
		ДанныеПечати.Вставить(ВыборкаДокументы.Ссылка, ДанныеДокумента);
	КонецЦикла;
	
	Возврат ДанныеПечати;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументПриложение(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)
	
	ПредставлениеВОшибке = Нстр("ru = 'Коммерческое предложение клиенту'");
	ШаблонОшибкиТовары	= НСтр("ru = 'В документе %1 отсутствуют товары. Печать %2 не требуется'");
	ПервыйДокумент = Истина;
	
	Для Каждого Параметр Из ДанныеДляПечати Цикл
		
		Документ = Параметр.Значение;
		
		Товары = Документ.Товары;
		
		Если Товары.Количество() = 0 Тогда
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибкиТовары,
			Документ,
			ПредставлениеВОшибке);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Документ);
			
			Возврат;
			
		КонецЕсли;
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = ПолучитьМакет("ПФ_MXL_Приложение");
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьЗаголовок.Параметры.Заполнить(Документ);
        ОбластьЗаголовок.Рисунки.ЛоготипОрганизации.Картинка = Документ.ЛоготипОрганизации;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблица");
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		Для Каждого СтрокаТовары Из Товары Цикл
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблица");
			ОбластьСтрока.Параметры.Заполнить(СтрокаТовары);
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		ОбластьИтогТаблица = Макет.ПолучитьОбласть("ИтогТаблица");
		ОбластьИтогТаблица.Параметры.Заполнить(Документ);
		
		ТабличныйДокумент.Вывести(ОбластьИтогТаблица);
		
		Если Документ.СуммаНДС > 0 Тогда
			ОбластьНДСТаблица = Макет.ПолучитьОбласть("НдсТаблица");
			ОбластьНДСТаблица.Параметры.Заполнить(Документ);
			
			ТабличныйДокумент.Вывести(ОбластьНДСТаблица);
		КонецЕсли;
	
		ОбластьУсловияПоставки = Макет.ПолучитьОбласть("УсловияПоставки");
		ОбластьУсловияПоставки.Параметры.Заполнить(Документ);
		
		ТабличныйДокумент.Вывести(ОбластьУсловияПоставки);
		
		ОбластьДопУсловия = Макет.ПолучитьОбласть("ДопУсловия");
		ОбластьДопУсловия.Параметры.Заполнить(Документ);
		
		ТабличныйДокумент.Вывести(ОбластьДопУсловия);
		
		ОбластьУсловияОплаты = Макет.ПолучитьОбласть("УсловияОплаты");
		ОбластьУсловияОплаты.Параметры.Заполнить(Документ);
		
		ТабличныйДокумент.Вывести(ОбластьУсловияОплаты);
		
		ОбластьПункт5 = Макет.ПолучитьОбласть("Пункт5");
		ОбластьПункт5.Параметры.Заполнить(Документ);
		ОбластьПункт5.Параметры.Пункт = 5;
		
		ТабличныйДокумент.Вывести(ОбластьПункт5);
		
		ОбластьПункт6 = Макет.ПолучитьОбласть("Пункт6");
		ОбластьПункт6.Параметры.Заполнить(Документ);
		ОбластьПункт6.Параметры.Пункт = 6;
		
		ТабличныйДокумент.Вывести(ОбластьПункт6);
		
		ОбластьПодписиСторон = Макет.ПолучитьОбласть("ПодписиСторон");
		ОбластьПодписиСторон.Параметры.Заполнить(Документ);
		
		ТабличныйДокумент.Вывести(ОбластьПодписиСторон);
		
		ОбластьПодписиОтветсвенных = Макет.ПолучитьОбласть("ПодписиОтветсвенных");
		ОбластьПодписиОтветсвенных.Параметры.Заполнить(Документ);
		
		ТабличныйДокумент.Вывести(ОбластьПодписиОтветсвенных);
		
		ОбластьКолонтитул = Макет.ПолучитьОбласть("Колонтитул");
		ОбластьКолонтитул.Параметры.Заполнить(Документ);
		
		ТабличныйДокумент.Вывести(ОбластьКолонтитул);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			Документ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область РаспоряжениеНаПогрузкуМС

Функция ДанныеДляПечатнойФормыРаспоряжениеНаПогрузкуМС(Знач МассивОбъектов, ПараметрыПечати = Неопределено)
	
	ДанныеПечати = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Номер КАК Номер,
	|	Док.Дата КАК Дата,
	|	&Организация КАК Организация
	|ПОМЕСТИТЬ РасходныйОрдерНаТовары
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК Док
	|ГДЕ
	|	Док.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Ссылка КАК Ссылка,
	|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура КАК Номенклатура,
	|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	СУММА(РасходныйОрдерНаТоварыОтгружаемыеТовары.Количество) КАК Количество,
	|	СУММА(РасходныйОрдерНаТоварыОтгружаемыеТовары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ОтгружаемыеТовары
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК РасходныйОрдерНаТоварыОтгружаемыеТовары
	|ГДЕ
	|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Ссылка В (&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура,
	|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура.НаименованиеПолное,
	|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка КАК Ссылка,
	|	МИНИМУМ(РасходныйОрдерНаТовары.Номер) КАК Номер,
	|	МИНИМУМ(РасходныйОрдерНаТовары.Дата) КАК Дата,
	|	МИНИМУМ(РасходныйОрдерНаТовары.Организация) КАК Организация,
	|	ОтгружаемыеТовары.Номенклатура КАК Номенклатура,
	|	ОтгружаемыеТовары.НоменклатураПредставление КАК НоменклатураПредставление,
	|	СУММА(ОтгружаемыеТовары.Количество) КАК Количество,
	|	СУММА(ОтгружаемыеТовары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары,
	|	ОтгружаемыеТовары КАК ОтгружаемыеТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерНаТовары.Ссылка,
	|	ОтгружаемыеТовары.Номенклатура,
	|	ОтгружаемыеТовары.НоменклатураПредставление
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Организация = Справочники.Организации.НайтиПоРеквизиту("КПП", "421701001");
	
	ФайлЛоготип = Неопределено;
	Если ЗначениеЗаполнено(Организация) Тогда
		ФайлЛоготип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ФайлЛоготип");
	КонецЕсли;

	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДокументы = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		ДанныеДокумента = Новый Структура;
		ДанныеДокумента.Вставить("Дата", Формат(ВыборкаДокументы.Дата, "ДФ=dd.MM.yyyy"));
	    ДанныеДокумента.Вставить("Номер", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДокументы.Номер, Истина, Истина));
		ДанныеДокумента.Вставить("Организация", ВыборкаДокументы.Организация);
		ДанныеДокумента.Вставить("ТекстЗаголовка", ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(
			ВыборкаДокументы, Нстр("ru = 'к Письму на отгрузку'")));
		
		ДД = Неопределено;
		Если ЗначениеЗаполнено(ФайлЛоготип) Тогда
			ДД = РаботаСФайлами.ДвоичныеДанныеФайла(ФайлЛоготип, Ложь);
		КонецЕсли;
		
		Если ДД <> Неопределено Тогда
			ЛоготипОрганизации = Новый Картинка(ДД, Истина);
		Иначе
			ЛоготипОрганизации = Новый Картинка;
		КонецЕсли;
		
		ДанныеДокумента.Вставить("ЛоготипОрганизации", ЛоготипОрганизации);
				
		ВыборкаТовары = ВыборкаДокументы.Выбрать();
		
		Товары = Новый Массив;
		НомерСтроки = 1;
		Пока ВыборкаТовары.Следующий() Цикл
			СтрокаТовары = Новый Структура;
			СтрокаТовары.Вставить("Номер", НомерСтроки);
			СтрокаТовары.Вставить("Номенклатура", ВыборкаТовары.НоменклатураПредставление);
			СтрокаТовары.Вставить("Количество", ВыборкаТовары.КоличествоУпаковок);
				
			Товары.Добавить(СтрокаТовары);
			
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
		ДанныеДокумента.Вставить("Товары", Товары); 
		
		ДанныеПечати.Вставить(ВыборкаДокументы.Ссылка, ДанныеДокумента);
	КонецЦикла;
	
	Возврат ДанныеПечати;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументРаспоряжениеНаПогрузкуМС(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыПечати)
	
	ПредставлениеВОшибке = Нстр("ru = 'Расходный ордер на товары'");
	ШаблонОшибкиТовары	= НСтр("ru = 'В документе %1 отсутствуют товары. Печать %2 не требуется'");
	ПервыйДокумент = Истина;
	
	Для Каждого Параметр Из ДанныеДляПечати Цикл
		
		Документ = Параметр.Значение;
		
		Товары = Документ.Товары;
		
		Если Товары.Количество() = 0 Тогда
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонОшибкиТовары,
			Документ,
			ПредставлениеВОшибке);
			
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Документ);
			
			Возврат;
			
		КонецЕсли;
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = ПолучитьМакет("ПФ_MXL_РаспоряжениеНаОтгрузкуМС");
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьЗаголовок.Параметры.Заполнить(Документ);
        ОбластьЗаголовок.Рисунки.ЛоготипОрганизации.Картинка = Документ.ЛоготипОрганизации;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		Для Каждого СтрокаТовары Из Товары Цикл
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
			ОбластьСтрока.Параметры.Заполнить(СтрокаТовары);
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
		ОбластьПодписи.Параметры.Заполнить(Документ);
		
		ТабличныйДокумент.Вывести(ОбластьПодписи);
			
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			Документ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли